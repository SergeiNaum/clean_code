version: "3.9"

x-postgres-variables: &postgres-variables
  POSTGRES_DB: "${DB__NAME}"
  POSTGRES_USER: "${DB__USER}"
  POSTGRES_PASSWORD: "${DB__PASSWORD}"

x-minio-variables: &minio-variables
  MINIO_SERVER_URL: "${STORAGE__S3__SERVER_URL}"
  MINIO_ROOT_USER: "${STORAGE__S3__ACCESS_KEY}"
  MINIO_ROOT_PASSWORD: "${STORAGE__S3__SECRET_KEY}"
  MINIO_BUCKET: "${STORAGE__S3__BUCKET}"

services:
  devcontainer:
    container_name: devcontainer-${APP_NAME}
    image: mcr.microsoft.com/devcontainers/python:1-3.12-bullseye
    volumes:
      - ..:/workspaces:cached
      - ~/.ssh:/home/vscode/.ssh:ro
    command: sleep infinity
    ports:
      - 8000:8000
      - 5678:5678
    environment:
      UV_LINK_MODE: copy

  postgres:
    container_name: postgres-${APP_NAME}
    image: postgres:latest
    environment:
      <<: *postgres-variables
    ports:
      - "${DB__PORT}:5432"
    healthcheck:
      interval: 10s
      retries: 10
      test: "pg_isready -U ${DB__USER} -d ${DB__NAME}"
      timeout: 2s

  minio:
    container_name: minio-${APP_NAME}
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      <<: *minio-variables
    ports:
      - "9000:9000"
      - "9001:9001"

  minio-client:
    container_name: minio-client-${APP_NAME}
    image: minio/mc
    entrypoint: ['/bin/sh', '-c']
    command:
      - |
        mc alias set local http://minio:9000 ${STORAGE__S3__ACCESS_KEY} ${STORAGE__S3__SECRET_KEY}
        mc mb --ignore-existing local/${STORAGE__S3__BUCKET}
        mc anonymous set download local/${STORAGE__S3__BUCKET}
    depends_on:
      - minio

  redis:
    container_name: redis-${APP_NAME}
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
